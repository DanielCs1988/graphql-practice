type Link {
    id: ID!
    url: String!
    description: String!
    postedBy: User
}

type User {
    id: ID!
    name: String!
    email: String
    password: String
}

type SigninPayload {
    token: String
    user: User
}

input AuthData {
    email: String!
    password: String!
}

input LinkFilter {
    urlContains: String
    descContains: String
}

type Query {
    allLinks(filter: LinkFilter, skip: Int = 0, first: Int = 0): [Link]
    getLink(id: ID!): Link
}

type Mutation {
    createLink(url: String!, description: String!): Link
    createUser(name: String!, authProvider: AuthData!): User
    signinUser(auth: AuthData!): SigninPayload
}

schema {
    query: Query
    mutation: Mutation
}